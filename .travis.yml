sudo: required
dist: bionic

os:
  - linux
  - osx

osx_image: xcode9.4

services:
  - docker

env:
  global:
    - secure: hRHTlAuSUqjjgUuCKDaCWYCPOdEYgnz4JOEuglaG6NnbLNx/UxWR9alxk41kdwLGH7cmN/Z7ZFWLffA0m49j3mKiNwY7fscHg7iyCTkwhfOK0F8PbYs23NqSW8dedkivwE/YC6QO8ElOO8RhqMmNZJO77v2XRmZfU4btfw40uyX3jkbyZjnj6a0SDzCWK8zCQxoaG3YPml1gsdn5QZ5hUMY79GAnVeufNJXjPNRwVZnSBD/2c95S64b6Slsx2XoTNXDUgzJFncCbmeYZGMgNbUWBG8968ew3Ck+TNG2oiH8Y8FZHgeKayJqNLC1QvRsgdiqBCci5Ve6+s8mVxikhdgYGJJXcn7G9vW2BV71U6YryRRyZPUUyj2vwAzZwSiiasQGLe0o1MEFuV/gN7M6p4m07XDYDXQogImVruvYbQXwk223/7IqnDkeHg1jzrxlx4nBgEddZKSlASG+l+2kw68XC6efB4Fm6kOId0MP00wG6PzhtywfGwIOML0QWof+XCCv8sUBz2aTLN1KXw/Bnsl5kRfAXwvDNYGMA3j1u5tCw9762qY9loenWLC/7+IZTnc4QHgCW3ZjSL0CQfMkOsGIP5fzKBeSt8/aXpXhNeEad3qkcSMeGDbs1a11zn2oKjjd0YyjoXj/GvefZe7a4tOWbBqF6ow9w6UjwCHwftM8=
    - secure: o4T5hXAk2mQHYLjZ+Yr/JwMkgfe5gvjm8XLVIJ4BNsO0OpW7oXQ5Hcw8nKYlF3HEGjHkdW+nHeKFtYivI32Yu6QYvUQK0Titp91LELPKgMpz8IvpksI3SbAyQOw6trDhoV/3r0kBT2Xjw2Q8aXjH9e55Ogw6G+MhiKCJL3/y8ECofjssPNaSAJO9AEbG658KMRYL9BTjMkLJlhkeaIwTvPMWBGdIpMIll6uD1xa0iMaB1taWT0oEapuY8rygF10YgKOrsRf/P5kfd742MxdJkbMhOQcgXb6SK7yjkGp6gMbv5rktpCK+7UfQQC8ibmoI/JMjeKDLoB6eVIbWMGBHcfcgWFqIFq4sT39kCl4ZbZZ+MU77mCVqq6UA6Vy/n8tbSICJvjkaBa//6pu+oAWYsTFFLN6beAxDB1RsS78m+ejMznPX2v2KI2bHmZp2qXRdN7csp6nCXJl1b3rWhrKuIdmhS5PFAvuCXMDxpOSPhNdEa8akonISy7SGQL4jgoINsLpRrKQFpLHzcan8UHQVVg4UuRugqZ2pYYoUaP2YMbjOKg1VgKZjALlFiNIKRqlDLNT24gakSJ9OFAU45TXE8gUEpA6JyfQuP6fwrD9TwhAdLSxjQkfNT0X3Nd/aAu4AxPNI7Ra0eoIW8/O+WvVT8jK0Qfg8bH0nMIYRgVPcbmc=

language: java

addons:
  apt:
    packages:
      - maven
      - python3
      - python3-setuptools
      - python3-pip
      - python-pygments
      # - r-base
      - libxml2-dev
      - valgrind
      - cppcheck
  # R disabled. It's taking up too much time in CI
  # homebrew:
  #   packages:
  #     - r
  #   update: true

install:
  - sudo pip3 install --upgrade pip
  - sudo pip3 install cmake==3.13.3
  - sudo -H pip3 install --upgrade setuptools wheel virtualenv
  - sudo -H pip3 install $TRAVIS_BUILD_DIR/emulator
  - sudo -H pip3 install awscli
  # R disabled. It's taking up too much time in CI
  # # install required packages for R
  # - sudo -H R --vanilla -e 'install.packages("knitr", repos="http://cran.us.r-project.org")'
  # - sudo -H R --vanilla -e 'install.packages("reticulate", repos="http://cran.us.r-project.org")'

before_script:
  # need to build in manylinux docker container!
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      docker pull dockcross/manylinux-x64 ;
    fi
    # for all tests except C++ we need libraries built inside docker and we need them for production
    # for C++ test we need libs to be compiled in the same env as test
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      cd $TRAVIS_BUILD_DIR && mkdir build_outside && cd build_outside && cmake -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/installed -DCMAKE_BUILD_TYPE=Release .. && sudo -H make && make install;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      docker run -e TRAVIS_BUILD_DIR=$TRAVIS_BUILD_DIR -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR dockcross/manylinux-x64 /bin/bash -c "/opt/python/cp36-cp36m/bin/pip3.6 install cmake==3.13.3 && cd $TRAVIS_BUILD_DIR && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/installed_docker -DCMAKE_BUILD_TYPE=Release .. && make && make install" ;
    fi
  # build for mac
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      cd $TRAVIS_BUILD_DIR && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/installed -DCMAKE_BUILD_TYPE=Release .. && make -j && make install ;
    fi
  - sudo -H pip3 install $TRAVIS_BUILD_DIR/python-package
  - sudo -H pip3 install -r $TRAVIS_BUILD_DIR/tests/python/requirements.txt
  # R disabled. It's taking up too much time in CI
  # - cd $TRAVIS_BUILD_DIR/r-package/brainflow && sudo -H R CMD build . && sudo -H R CMD INSTALL brainflow_0.0.0.9000.tar.gz
  - cd $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo && mkdir build && cd build && cmake -DCMAKE_PREFIX_PATH=$TRAVIS_BUILD_DIR/installed .. && make -j
  - cd $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo && mkdir build && cd build && cmake -DCMAKE_PREFIX_PATH=$TRAVIS_BUILD_DIR/installed .. && make -j
  - cd $TRAVIS_BUILD_DIR && cd java-package/brainflow && mvn package
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      cp $TRAVIS_BUILD_DIR/java-package/brainflow/target/classes/brainflow/*.so $TRAVIS_BUILD_DIR/java-package/brainflow/target/classes/ ;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      cp $TRAVIS_BUILD_DIR/java-package/brainflow/target/classes/brainflow/*.dylib $TRAVIS_BUILD_DIR/java-package/brainflow/target/classes/ ;
    fi

script:
  # static analyzer
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      cd $TRAVIS_BUILD_DIR && cppcheck --xml --xml-version=2 --force src cpp-package third_party 2>cppcheck_res.xml && cppcheck-htmlreport --title=BrainFlow --file=cppcheck_res.xml --report-dir=report ;
    fi
  # tests for boards
  # tests for cyton
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 0 --serial-port
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 0 --streamer-params file://file_streamer.csv:w --serial-port
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_multiboard_get_data.py --log --board-id 0 --serial-port
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 0 --serial-port
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 0 --serial-port ;
    fi
  # tests for synthetic board
  - python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id -1
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id -1
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id -1;
    fi
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.BrainFlowGetData" -Dexec.args="--board-id -1"
  # R disabled. It's taking up too much time in CI
  # - Rscript $TRAVIS_BUILD_DIR/tests/r/brainflow_get_data.R
  # tests for cyton daisy
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 2 --serial-port 
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 2 --serial-port
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/cyton_linux.py valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 2 --serial-port ;
    fi
  # tests for novaxr
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/novaxr_udp.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --board-id 3 --ip-address 127.0.0.1 --log
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/novaxr_udp.py $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 3 --ip-address 127.0.0.1
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/novaxr_udp.py valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 3 --ip-address 127.0.0.1 ;
    fi
  # tests for wifi shield, fails on macos due to an issue in emulator
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/wifi_shield_emulator.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 4 --ip-address 127.0.0.1 --ip-port 17982 ;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/wifi_shield_emulator.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 5 --ip-address 127.0.0.1 --ip-port 17983 ;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/wifi_shield_emulator.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id 6 --ip-address 127.0.0.1 --ip-port 17984 ;
    fi
  # tests for streaming board
  - python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/streaming_board_emulator.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --log --board-id -2 --ip-address 225.1.1.1 --ip-port 6677 --other-info -1
  - python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/streaming_board_emulator.py $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id -2 --ip-address 225.1.1.1 --ip-port 6677 --other-info -1
  - if [ `which valgrind` ]; then
      python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/streaming_board_emulator.py valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id -2 --ip-address 225.1.1.1 --ip-port 6677 --other-info -1 ;
    fi
  # test for fascia
  - sudo -H python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/fascia_emulator_ci.py python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_get_data.py --board-id 12 --ip-port 7789
  - if [ `which valgrind` ]; then
      python3 $TRAVIS_BUILD_DIR/emulator/brainflow_emulator/fascia_emulator_ci.py valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/get_data_demo/build/brainflow_get_data --board-id 12 --ip-port 7789 ;
    fi
  # tests for signal processing
  # python
  - python3 $TRAVIS_BUILD_DIR/tests/python/denoising.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/serialization.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/signal_filtering.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/transforms.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/downsampling.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/brainflow_to_mne.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/band_power.py
  - python3 $TRAVIS_BUILD_DIR/tests/python/band_power_all.py
  # C++
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/denoising
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/downsampling
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/signal_filtering
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/serialization
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/transforms
  - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/band_power
  # valgrind tests
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/denoising ;
    fi
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/downsampling ;
    fi
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/signal_filtering ;
    fi
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/serialization ;
    fi
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/transforms ;
    fi
  - if [ `which valgrind` ]; then
      LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$TRAVIS_BUILD_DIR/installed/lib valgrind --error-exitcode=1 --leak-check=full $TRAVIS_BUILD_DIR/tests/cpp/signal_processing_demo/build/band_power ;
    fi
  # java
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.Denoising"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.Downsampling"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.Serialization"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.SignalFiltering"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.Transforms"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.BandPower"
  - cd $TRAVIS_BUILD_DIR/java-package/brainflow && mvn exec:java -Dexec.mainClass="brainflow.examples.BandPowerAll"


after_success:
  # push libraries from docker!
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      aws s3 cp $TRAVIS_BUILD_DIR/installed_docker/lib/ s3://brainflow-artifacts/$TRAVIS_COMMIT/$TRAVIS_OS_NAME --recursive ;
    fi
  # push results of static analyzer
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      aws s3 cp $TRAVIS_BUILD_DIR/report s3://brainflow-artifacts/$TRAVIS_COMMIT/report --recursive ;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      aws s3 cp $TRAVIS_BUILD_DIR/installed/lib/ s3://brainflow-artifacts/$TRAVIS_COMMIT/$TRAVIS_OS_NAME --recursive ;
    fi
  # notify that everything is ok
  - echo success > ${TRAVIS_OS_NAME}_success && aws s3 cp ${TRAVIS_OS_NAME}_success s3://brainflow-artifacts/$TRAVIS_COMMIT/

after_failure:
  # notify Appveyor of travis test failure
  echo failure > ${TRAVIS_OS_NAME}_failure && aws s3 cp ${TRAVIS_OS_NAME}_failure s3://brainflow-artifacts/$TRAVIS_COMMIT/

notifications:
  email:
    on_success: never
    on_failure: always